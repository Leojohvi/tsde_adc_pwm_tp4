El objetivo de este proyecto fue el de juntar lo utilizado anteriormente para en la conversión analógica digital y en la generación del PWM para controlar el brillo de un LED a través del movimiento de la perilla de un potenciómetro.  Para lograr esto se tomó el test 3 del ADC, correspondiente al test realizado por interrupciones y luego se calculó un promedio de los valores convertidos devueltos por éste, para su posterior utilización en el PWM.


Luego, se modificó la función del test 1 del PWM, agregando un parámetro de tipo uint16_t a recibir llamado valor, parámetro que se utilizó posteriormente para agregarlo en el parámetro active de la función SetPWM, con lo cual se logró modificar el duty cycle del PWM, que era lo que se deseaba para aumentar o reducir el brillo del LED. En este caso se le pasó a valor el promedio calculado con el ADC para modificar el brillo del LED y como era de esperarse, el brillo aumentó para valores de promedio mayores pasado a la función del test 1.


Por último, se definió la variable promedio (la que guarda el promedio de los valores ADC) como global de todo el proyecto, para después pasar su dirección de memoria a la lista task_cfg_t task_cfg_list[] cuyo tipo es el de una estructura que tiene 2 punteros a función y reciben las funciones init y update tanto de ADC como de PWM y un puntero al tipo uint16_t, el cual le pasa los parámetros a cada una de las funciones ingresadas en la lista. En este caso se le pasó la dirección de memoria de promedio al puntero parameters en la parte correspondiente al  PWM en inicialización de la lista. De esta forma se logró pasarle los valores modificados por el ADC a la función PWM.